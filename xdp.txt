     1	#include <linux/bpf.h>
     2	#include "bpf_helpers.h"
     3	#include "bpf_api.h"
     4	#include <linux/if_ether.h>
     5	#include <linux/ip.h>
     6	#include <linux/in.h>
     7	
     8	#define u32		unsigned int
     9	#define u16		unsigned short
    10	#define u64		unsigned long long
    11	
    12	SEC("xdp") int xdp_main(struct xdp_md *ctx)
    13	{
    14		void *data_end = (void*)(long)ctx->data_end;
    15		void *data = (void*)(long)ctx->data;
    16		struct ethhdr *eth = data;
    17		u64 nh_off;
    18		u16 h_proto;
    19		u32 src_ip;
    20		int ret = XDP_PASS;
    21	
    22		nh_off = sizeof(struct ethhdr);
    23		if(data + nh_off > data_end)
    24			return XDP_DROP;
    25	
    26		h_proto = eth->h_proto;
    27		if(h_proto != htons(ETH_P_IP))
    28			return XDP_PASS;
    29	
    30		struct iphdr *iph = data + nh_off;
    31		if(iph+1 > data_end)
    32			return XDP_DROP;
    33	
    34		src_ip = ntohl(iph->saddr);
    35		if(src_ip == ((172 << 24) | (18 << 16) | (0 << 8) | 2))
    36			ret =  XDP_DROP;
    37	
    38		return ret;
    39	}
    40	
    41	char license[] SEC("license") = "GPL";
    42	
